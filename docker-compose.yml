version: '3.7'

x-logging:
  &json-logging
  driver: json-file
  options:
    max-size: "1m"
    max-file: "3"

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
      args:
        - ARCHITECTURE=${ASSETMGMT_ARCH:-arm32v7}
        - TZ=${ASSETMGMT_TZ:-UTC}
    image: nginx.asset-management
    container_name: nginx.asset-management
    restart: always
    volumes:
      - static-volume:/var/www/static:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    logging: *json-logging
    ports:
      - ${ASSETMGMT_ACCESS_PORT:-3101}:80
    depends_on:
      - backend
    networks:
      - frontend-link

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - UID
        - GID
        - USERNAME=user
        - GROUPNAME=user
        - ARCHITECTURE=${ASSETMGMT_ARCH:-arm32v7}
        - TZ=${ASSETMGMT_TZ:-UTC}
    image: backend.asset-management
    container_name: backend.asset-management
    restart: always
    env_file:
      - ./env_files/backend/docker.env
      - ./env_files/backend/.env
      - ./env_files/postgres/.env
    environment:
      - DJANGO_LANGUAGE_CODE=${ASSETMGMT_LANGCODE:-en}
      - DJANGO_TIME_ZONE=${ASSETMGMT_TZ:-UTC}
    volumes:
      - static-volume:/var/static
      - ./backend/uwsgi.ini:/opt/uwsgi.ini:ro
      - ./backend/bashrc:/opt/home/.bashrc:ro
      - ./backend/src:/opt/app
      - ./backend/pyproject.toml:/opt/pyproject.toml
    logging: *json-logging
    expose:
      - 8001
    depends_on:
      - postgres
    networks:
      - frontend-link
      - backend-link

  celery:
    image: backend.asset-management
    container_name: celery.asset-management
    restart: always
    env_file:
      - ./env_files/backend/docker.env
      - ./env_files/backend/.env
      - ./env_files/postgres/.env
    environment:
      - NUM_CPUS=2
      - DJANGO_LANGUAGE_CODE=${ASSETMGMT_LANGCODE:-en}
      - DJANGO_TIME_ZONE=${ASSETMGMT_TZ:-UTC}
    working_dir: /opt
    entrypoint: /opt/entrypoint.sh
    volumes:
      - ./celery/entrypoint.sh:/opt/entrypoint.sh:ro
      - ./celery/show-log.sh:/opt/show-log.sh:ro
      - ./backend/src:/opt/app:ro
      - ./backend/bashrc:/opt/home/.bashrc:ro
    logging: *json-logging
    depends_on:
      redis:
        condition: service_started
      backend:
        condition: service_started
    networks:
      - backend-link

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
      args:
        - ARCHITECTURE=${ASSETMGMT_ARCH:-arm32v7}
    image: redis.asset-management
    container_name: redis.asset-management
    restart: always
    privileged: true
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
    logging: *json-logging
    expose:
      - 6379
    networks:
      - backend-link

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
      args:
        - ARCHITECTURE=${ASSETMGMT_ARCH:-arm32v7}
        - TZ=${ASSETMGMT_TZ:-UTC}
    image: postgres.asset-management
    container_name: postgres.asset-management
    restart: always
    env_file:
      - ./env_files/postgres/.env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - LANG=C
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    volumes:
      - db-volume:/var/lib/postgresql/data
    logging: *json-logging
    expose:
      - 5432
    networks:
      - backend-link

networks:
  frontend-link:
    name: frontend-asset-management
  backend-link:
    name: backend-asset-management

volumes:
  static-volume:
    name: static-asset-management
    driver: local
  db-volume:
    name: postgres-asset-management
    driver: local
